@model Maize_Trade.Models.Purchase

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Purchase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FarmerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FarmerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FarmerID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Farmer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="farmerDetails">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaizeWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaizeWeight, new { htmlAttributes = new { @class = "form-control", @placeholder = "Please enter weight in Kwintal." } })
                @Html.ValidationMessageFor(model => model.MaizeWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaizeRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaizeRate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Please enter current Rate." } })
                @Html.ValidationMessageFor(model => model.MaizeRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeductionInWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeductionInWeight, new { htmlAttributes = new { @class = "form-control", @placeholder = "Please enter deduction(in kg) per Kwintal." } })
                @Html.ValidationMessageFor(model => model.DeductionInWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var url = "@Url.Action("FarmerDetails", "Purchases")";
        $('#FarmerID').on('change', function () {
            $.get(url,{id:this.value}, function (data) {
                $("#farmerDetails").html(data);
            });
        });        
        $(document).ready(function () {
            $.get(url, { id: $('#FarmerID option:selected').val() }, function (data) {
                $("#farmerDetails").html(data);
            });
        });
        $("#MaizeWeight").change(CalculateTotal);
        $("#MaizeRate").change(CalculateTotal);
        $("#DeductionInWeight").change(CalculateTotal);
        function CalculateTotal() {
            try {                
                var weightinKwintal = $("#MaizeWeight").val();
                var rate = $("#MaizeRate").val();
                var deductionPerKwintal = $("#DeductionInWeight").val();
                var totaldeduction = (weightinKwintal * deductionPerKwintal) / 100;
                weightinKwintal = weightinKwintal - totaldeduction;
                var totalAmount = weightinKwintal * rate;
                $("#TotalAmount").val(totalAmount);
            }
            catch(err){
                //handle the error.
                $("#TotalAmount").val("Invalid data");
            }
        }
    </script>
}
